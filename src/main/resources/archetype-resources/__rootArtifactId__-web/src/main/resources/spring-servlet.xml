<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       "
	default-autowire="byName">


	<import resource="classpath:jdpurchase-web.xml" />

	<context:component-scan base-package="com.shinemo.jd.web" />
	<context:annotation-config />

	<mvc:annotation-driven conversion-service="conversionService" >
		<mvc:message-converters register-defaults="false">
			<ref bean="stringHttpMessageConverter"/>
			<ref bean="jsonHttpMessageConverter"/>
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
			<bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
			<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
			<bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="conversionService"
      class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.shinemo.client.spring.StringToEnumConverterFactory"/>
                <bean class="com.shinemo.jd.web.common.StringToDateConverterFactory"/>
            </set>
        </property>
    </bean>

	<bean id="genericConversionService" class="org.springframework.core.convert.support.GenericConversionService"/>

	<!-- responseBody使用 -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
        <property name="objectMapper" ref="objectMapper"/>
	</bean>

	<bean id="objectMapper" class="com.shinemo.jd.web.util.ObjectMapper" />

	<bean id="exceptionHandler" class="com.shinemo.jd.web.common.ExceptionHandler" />

	<bean class="com.shinemo.jd.web.common.ApplicationInitListener" />



	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:config.properties</value>
			</list>
		</property>
	</bean>
	
	
	 <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <property name="defaultEncoding" value="UTF-8" />
      <!-- 指定所上传文件的总大小不能超过10MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
      <property name="maxUploadSize" value="10485760" />
    </bean>
    
    
     <bean id="ipWhiteListCallBack"
          class="com.shinemo.client.interceptor.callback.impl.IpWhiteListCallBackImpl">
        <property name="whiteHost">
            <list>
                <bean class="com.shinemo.client.interceptor.WhiteHost">
                    <constructor-arg name="appName" value="_no_app_name"/>
                    <constructor-arg name="ipList" value="${no_app_name_white_ip_list}"/>
                </bean>
            </list>
        </property>
    </bean>
    
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.shinemo.client.interceptor.NotLoginAndWhiteUrlInterceptor">
                <property name="ipWhiteListCallBack" ref="ipWhiteListCallBack"/>
                <property name="isSkipWhiteUrlCheck" value="${jdpurchase.skip.white.url.check}"/>
            </bean>
        </mvc:interceptor>
        
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.shinemo.jd.web.common.TokenInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    
	<context:property-placeholder/>
</beans>